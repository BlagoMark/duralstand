{"version":3,"file":"static/js/582.62cc478e.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Bio/Bio.module.css?4bd6","webpack://my-app/./src/components/Profile/Bio/Status/Status.module.css?30e5","components/Profile/Bio/Status/StatusWithHooks.jsx","components/Profile/Bio/Bio.jsx","webpack://my-app/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","webpack://my-app/./src/components/Profile/Posts/Posts.module.css?138f","webpack://my-app/./src/components/Profile/Posts/WritePost/WritePost.module.css?b52d","components/Profile/Posts/WritePost/WritePost.jsx","components/Profile/Posts/WritePost/WritePostContainer.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/Wallpaper/Wallpaper.module.css?077d","components/Profile/Wallpaper/Wallpaper.jsx","components/Profile/Profile.jsx","redux/profileSelectors.js","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","components/util/validator/validator.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bio\":\"Bio_bio__QKgZT\",\"avatar\":\"Bio_avatar__+oKzK\",\"bio_content\":\"Bio_bio_content__OoJFY\",\"status\":\"Bio_status__iEB8c\",\"name\":\"Bio_name__nDeui\",\"subscribe\":\"Bio_subscribe__ZfSVT\",\"selectPhoto\":\"Bio_selectPhoto__ocdAj\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"Status_status__lCRhz\",\"editModeTrue\":\"Status_editModeTrue__-a1Un\",\"editModeFalse\":\"Status_editModeFalse__jRATj\",\"button\":\"Status_button__BxsvC\"};","import React, { useEffect, useState } from \"react\";\nimport classes from \"./Status.module.css\";\n\nconst StatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div className={classes.editModeFalse}>\n      {!editMode ? (\n        <div className={classes.status}>\n          <span>\n            {props.status\n              ? props.status\n              : \"Привет! Я новый пользователь DuralStand 👋\"}\n          </span>\n          {props.isOwner ? (\n            <button\n              className={\"button \" + classes.button}\n              onClick={activateEditMode}\n            >\n              ✎\n            </button>\n          ) : null}\n        </div>\n      ) : (\n        <div className={classes.editModeTrue}>\n          <input\n            onChange={onStatusChange}\n            type=\"text\"\n            value={status}\n            autoFocus={true}\n          />\n          <button\n            className={\"button \" + classes.button}\n            onClick={deactivateEditMode}\n          >\n            ✔\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatusWithHooks;\n","import React from \"react\";\nimport classes from \"./Bio.module.css\";\nimport avatar from \"../../../assets/img/user.png\";\nimport StatusWithHooks from \"./Status/StatusWithHooks\";\nimport { usersAPI } from \"../../../api/api\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {\n  follow,\n  unfollow,\n  onShowMoreUsers,\n  toggleIsFollowInProgress,\n  followTC,\n  unfollowTC,\n} from \"../../../redux/usersReducer\";\n\nconst Bio = (props) => {\n  const onAvatarSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n  return (\n    <div className={classes.bio}>\n      <div className={classes.avatar}>\n        <img\n          src={props.bio.photos.large ? props.bio.photos.large : avatar}\n          alt=\"bio-img\"\n        />\n        {props.isOwner ? (\n          <div className={classes.selectPhoto}>\n            <label>\n              <div>📷</div>\n              <input type={\"file\"} onChange={onAvatarSelected}></input>\n            </label>\n          </div>\n        ) : null}\n      </div>\n      <div className={classes.bio_content}>\n        <h2 className={classes.name}>{props.bio.fullName}</h2>\n        <br />\n        <StatusWithHooks\n          isOwner={props.isOwner}\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n        <p>\n          День рождения: {props.bio.birthday ? props.bio.birthday : \"не указан\"}\n        </p>\n        <p>Город: {props.bio.city ? props.bio.city : \"не указан\"}</p>\n      </div>\n      {!props.isOwner ? (\n        <div className={classes.subscribe}>\n          <button\n            disabled={props.followInProgress}\n            onClick={() => {\n              props.followTC(props.bio.userId);\n            }}\n            className={`${classes.unfollow} button`}\n          >\n            Вы подписаны\n          </button>\n          <button\n            disabled={props.followInProgress}\n            onClick={() => {\n              props.unfollowTC(props.bio.userId);\n            }}\n            className={`button`}\n          >\n            Подписаться\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nclass BioContainer extends React.Component {\n  render() {\n    return <Bio {...this.props} />;\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    followAPI: usersAPI.follow,\n    unfollowAPI: usersAPI.unfollow,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    follow,\n    unfollow,\n    onShowMoreUsers,\n    toggleIsFollowInProgress,\n    followTC,\n    unfollowTC,\n  })\n)(BioContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__FKz4t\",\"item__img\":\"Post_item__img__AF3f3\",\"item__text\":\"Post_item__text__jjBrK\",\"like\":\"Post_like__8w4uY\",\"name\":\"Post_name__ykB+r\"};","import React from \"react\";\nimport classes from \"./Post.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <div className={classes.item__img}>\n        <img src={props.avatar} alt=\"\" />\n      </div>\n      <div className={classes.item__text}>\n        {props.message}\n        <NavLink to=\"#markblagov\" className={classes.name}>\n          {props.name}\n        </NavLink>\n      </div>\n      <div className={classes.like}>\n        <span>♥</span> {props.likes}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__pBNDM\",\"postsItems\":\"Posts_postsItems__PrTvf\"};","// extracted by mini-css-extract-plugin\nexport default {\"write\":\"WritePost_write__8ZMWh\",\"area\":\"WritePost_area__1vt3J\",\"btn\":\"WritePost_btn__uh00Z\",\"postsTitle\":\"WritePost_postsTitle__w9d6P\"};","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../../util/validator/validator\";\nimport classes from \"./WritePost.module.css\";\n\nconst maxLength300 = maxLengthCreator(300);\n\nconst WritePost = (props) => {\n  let addPost = (values) => {\n    props.addPost(values.WritePost);\n    props.reset(\"WritePost\");\n  };\n  return (\n    <>\n      {props.isOwner ? (\n        <AddPostFormRedux onSubmit={addPost} />\n      ) : (\n        <span className={classes.postsTitle}>Публикации</span>\n      )}\n    </>\n  );\n};\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.write}>\n      <Field\n        validate={[required, maxLength300]}\n        component={Textarea}\n        name=\"WritePost\"\n        required\n        placeholder=\"Расскажите, что нового :)\"\n        className={classes.area}\n      />\n      <button className={`${classes.btn} ${\"button\"}`}>Отправить</button>\n    </form>\n  );\n};\n\nconst AddPostFormRedux = reduxForm({ form: \"WritePost\" })(AddPostForm);\n\nexport default WritePost;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { addPost } from \"../../../../redux/profileReducer\";\nimport WritePost from \"./WritePost\";\nimport { reset } from \"redux-form\";\n\nlet mapStateToProps = (state) => {\n  return { newPostText: state.profilePage.newPostText };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    addPost,\n    reset,\n  })\n)(WritePost);\n","import React from \"react\";\nimport classes from \"./Posts.module.css\";\nimport WritePostContainer from \"./WritePost/WritePostContainer\";\n\nconst Posts = (props) => {\n  return (\n    <div className={classes.posts}>\n      <WritePostContainer isOwner={props.isOwner} />\n      <div className={classes.postsItems}>{props.postsElements}</div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Post from \"./Post/Post\";\nimport Posts from \"./Posts\";\nimport avatar from \"../../../assets/img/user.png\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  let postsElements = state.profilePage.posts.map((post) => {\n    return (\n      <Post\n        name={state.profilePage.profile.fullName}\n        avatar={\n          state.profilePage.profile.photos.small\n            ? state.profilePage.profile.photos.small\n            : avatar\n        }\n        message={post.message}\n        likes={post.likes}\n      />\n    );\n  });\n  return { postsElements: postsElements };\n};\n\nexport default compose(connect(mapStateToProps, {}))(Posts);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__g-Lde\",\"main_img\":\"Profile_main_img__3UTF+\"};","// extracted by mini-css-extract-plugin\nexport default {\"main_img\":\"Wallpaper_main_img__NFfs7\"};","import React from \"react\";\nimport classes from \"./Wallpaper.module.css\";\n\nconst Wallpaper = (props) => {\n  return (\n    <img className={classes.main_img} src={props.wallpaper} alt=\"mainImg\" />\n  );\n};\n\nexport default Wallpaper;\n","import React from \"react\";\nimport Preloader from \"../common/preloader/preloader\";\nimport BioContainer from \"./Bio/Bio\";\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport classes from \"./Profile.module.css\";\nimport Wallpaper from \"./Wallpaper/Wallpaper\";\n\nconst Profile = (props) => {\n  return (\n    <div className={classes.content}>\n      {!props.profile ? (\n        <Preloader />\n      ) : (\n        <>\n          <Wallpaper wallpaper={props.wallpaper} />\n          <BioContainer\n            isOwner={props.isOwner}\n            bio={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}\n            savePhoto={props.savePhoto}\n          />\n          <PostsContainer isOwner={props.isOwner} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","export const getWallpaper = (state) => {\n  return state.profilePage.bio.wallpaper;\n};\n\nexport const getProfile = (state) => {\n  return state.profilePage.profile;\n};\n\nexport const getStatus = (state) => {\n  return state.profilePage.status;\n};\n\nexport const getAuthorizedUserId = (state) => {\n  return state.auth.userId;\n};\n\nexport const getIsAuth = (state) => {\n  return state.auth.isAuth;\n};\n","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getUserStatus,\n  updateStatus,\n  savePhoto,\n} from \"../../redux/profileReducer\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { withRouter } from \"../Hoc/withRouter\";\nimport { compose } from \"redux\";\nimport {\n  getAuthorizedUserId,\n  getIsAuth,\n  getProfile,\n  getStatus,\n  getWallpaper,\n} from \"../../redux/profileSelectors\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.router.params;\n    if (!userId[\"*\"]) {\n      userId[\"*\"] = this.props.authorizedUserId;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile();\n  }\n  componentDidUpdate(prevProps) {\n    let userId = this.props.router.params;\n    let prevUserId = prevProps.router.params;\n    if (userId[\"*\"] !== prevUserId[\"*\"]) {\n      this.refreshProfile();\n    }\n  }\n  getIsOwner() {\n    let userId = this.props.authorizedUserId;\n    return (\n      this.props.router.location.pathname === \"/profile/\" ||\n      this.props.router.location.pathname === `/profile/${userId}`\n    );\n  }\n  render() {\n    return <Profile {...this.props} isOwner={this.getIsOwner()} />;\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  wallpaper: getWallpaper(state),\n  profile: getProfile(state),\n  preloader: { Preloader },\n  status: getStatus(state),\n  authorizedUserId: getAuthorizedUserId(state),\n  isAuth: getIsAuth(state),\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getUserStatus,\n    updateStatus,\n    savePhoto,\n  }),\n  withRouter\n)(ProfileContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport classes from \"./FormsControls.module.css\";\n\nconst FormControls = ({ meta, element }) => {\n  const hasError = meta.error && meta.touched;\n  return (\n    <div\n      className={classes.formControls + \" \" + (hasError ? classes.error : \"\")}\n    >\n      {element}\n    </div>\n  );\n};\n\nexport const Textarea = ({ input, meta, ...props }) => {\n  return (\n    <FormControls\n      {...props}\n      meta={meta}\n      input={input}\n      element={<textarea {...props} {...input} />}\n    />\n  );\n};\n\nexport const Input = ({ input, meta, ...props }) => {\n  return (\n    <FormControls\n      {...props}\n      meta={meta}\n      input={input}\n      element={<input {...props} {...input} />}\n    />\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  validators,\n  component,\n  props = {}\n) => (\n  <Field\n    placeholder={placeholder}\n    name={name}\n    validate={validators}\n    component={component}\n    {...props}\n  ></Field>\n);\n","export const required = (value) => {\n  if (value) return undefined;\n  return \"Это поле обязательно для заполнения\";\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Превышен лимит символов: ${maxLength}`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formControls\":\"FormsControls_formControls__npsiU\",\"error\":\"FormsControls_error__wukgD\",\"formSummaryError\":\"FormsControls_formSummaryError__Rdvzq\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onChange","e","currentTarget","value","type","autoFocus","onClick","updateStatus","isOwner","Bio","src","bio","photos","large","avatar","alt","target","files","length","savePhoto","fullName","birthday","city","disabled","followInProgress","followTC","userId","unfollowTC","BioContainer","this","React","compose","connect","state","followAPI","usersAPI","unfollowAPI","follow","unfollow","onShowMoreUsers","toggleIsFollowInProgress","message","to","name","likes","maxLength300","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","values","addPost","WritePost","reset","newPostText","profilePage","WritePostContainer","postsElements","posts","map","post","profile","small","Posts","wallpaper","PostsContainer","getWallpaper","getProfile","getStatus","getAuthorizedUserId","auth","getIsAuth","isAuth","ProfileContainer","router","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","prevUserId","location","pathname","getIsOwner","preloader","Preloader","withRouter","FormControls","meta","element","hasError","error","touched","input","Input","createField","validators","maxLength"],"sourceRoot":""}