{"version":3,"file":"static/js/582.22159583.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Bio/Bio.module.css?4bd6","webpack://my-app/./src/components/Profile/Bio/Status/Status.module.css?30e5","components/Profile/Bio/Status/StatusWithHooks.jsx","components/Profile/Bio/Bio.jsx","webpack://my-app/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","webpack://my-app/./src/components/Profile/Posts/Posts.module.css?138f","webpack://my-app/./src/components/Profile/Posts/WritePost/WritePost.module.css?b52d","components/Profile/Posts/WritePost/WritePost.jsx","components/Profile/Posts/WritePost/WritePostContainer.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/Wallpaper/Wallpaper.module.css?077d","components/Profile/Wallpaper/Wallpaper.jsx","components/Profile/Profile.jsx","redux/profileSelectors.js","components/Profile/ProfileContainer.jsx","webpack://my-app/./src/components/Users/Subscribe/User.module.css?3e16","components/Users/Subscribe/Subscribe.jsx","components/common/FormsControls/FormsControls.jsx","components/util/validator/validator.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bio\":\"Bio_bio__QKgZT\",\"avatar\":\"Bio_avatar__+oKzK\",\"bio_content\":\"Bio_bio_content__OoJFY\",\"status\":\"Bio_status__iEB8c\",\"name\":\"Bio_name__nDeui\",\"subscribe\":\"Bio_subscribe__ZfSVT\",\"selectPhoto\":\"Bio_selectPhoto__ocdAj\",\"error\":\"Bio_error__Xo0B-\",\"fadeIn\":\"Bio_fadeIn__7kOpv\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"Status_status__lCRhz\",\"editModeTrue\":\"Status_editModeTrue__-a1Un\",\"editModeFalse\":\"Status_editModeFalse__jRATj\",\"button\":\"Status_button__BxsvC\"};","import React, { useEffect, useState } from \"react\";\nimport classes from \"./Status.module.css\";\n\nconst StatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div className={classes.editModeFalse}>\n      {!editMode ? (\n        <div className={classes.status}>\n          <span>\n            {props.status\n              ? props.status\n              : \"Привет! Я новый пользователь DuralStand 👋\"}\n          </span>\n          {props.isOwner ? (\n            <button\n              className={\"button \" + classes.button}\n              onClick={activateEditMode}\n            >\n              ✎\n            </button>\n          ) : null}\n        </div>\n      ) : (\n        <div className={classes.editModeTrue}>\n          <input\n            onChange={onStatusChange}\n            type=\"text\"\n            value={status}\n            autoFocus={true}\n          />\n          <button\n            className={\"button \" + classes.button}\n            onClick={deactivateEditMode}\n          >\n            ✔\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatusWithHooks;\n","import React from \"react\";\nimport classes from \"./Bio.module.css\";\nimport avatar from \"../../../assets/img/user.png\";\nimport StatusWithHooks from \"./Status/StatusWithHooks\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport Subscribe from \"../../Users/Subscribe/Subscribe\";\nimport { followTC, unfollowTC } from \"../../../redux/usersReducer\";\n\nconst Bio = (props) => {\n  const onAvatarSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n  return (\n    <div className={classes.bio}>\n      <div className={classes.avatar}>\n        <img\n          src={props.bio.photos.large ? props.bio.photos.large : avatar}\n          alt=\"bio-img\"\n        />\n        {props.isOwner ? (\n          <>\n            <div className={classes.selectPhoto}>\n              <label>\n                <div>📷</div>\n                <input type={\"file\"} onChange={onAvatarSelected}></input>\n              </label>\n            </div>\n          </>\n        ) : null}\n      </div>\n      {props.error ? <div className={classes.error}>{props.error}</div> : null}\n      <div className={classes.bio_content}>\n        <h2 className={classes.name}>{props.bio.fullName}</h2>\n        <br />\n        <StatusWithHooks\n          isOwner={props.isOwner}\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n        <p>\n          День рождения: {props.bio.birthday ? props.bio.birthday : \"не указан\"}\n        </p>\n        <p>Город: {props.bio.city ? props.bio.city : \"не указан\"}</p>\n      </div>\n      <Subscribe\n        isOwner={props.isOwner}\n        id={props.bio.userId}\n        followed={props.followed.followed}\n        followTC={props.followTC}\n        unfollowTC={props.unfollowTC}\n      />\n    </div>\n  );\n};\n\nclass BioContainer extends React.Component {\n  render() {\n    return <Bio {...this.props} />;\n  }\n}\n\nexport default compose(\n  connect(null, {\n    followTC,\n    unfollowTC,\n  })\n)(BioContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__FKz4t\",\"item__img\":\"Post_item__img__AF3f3\",\"item__text\":\"Post_item__text__jjBrK\",\"like\":\"Post_like__8w4uY\",\"name\":\"Post_name__ykB+r\"};","import React from \"react\";\nimport classes from \"./Post.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <div className={classes.item__img}>\n        <img src={props.avatar} alt=\"\" />\n      </div>\n      <div className={classes.item__text}>\n        {props.message}\n        <NavLink to=\"#markblagov\" className={classes.name}>\n          {props.name}\n        </NavLink>\n      </div>\n      <div\n        className={classes.like}\n        onClick={() => {\n          props.likes++;\n        }}\n      >\n        <span>♥</span> {props.likes}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__pBNDM\",\"postsItems\":\"Posts_postsItems__PrTvf\"};","// extracted by mini-css-extract-plugin\nexport default {\"write\":\"WritePost_write__8ZMWh\",\"area\":\"WritePost_area__1vt3J\",\"btn\":\"WritePost_btn__uh00Z\",\"postsTitle\":\"WritePost_postsTitle__w9d6P\"};","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../../util/validator/validator\";\nimport classes from \"./WritePost.module.css\";\n\nconst maxLength300 = maxLengthCreator(300);\n\nconst WritePost = (props) => {\n  let addPost = (values) => {\n    props.addPost(values.WritePost);\n    props.reset(\"WritePost\");\n  };\n  return (\n    <>\n      {props.isOwner ? (\n        <AddPostFormRedux onSubmit={addPost} />\n      ) : (\n        <span className={classes.postsTitle}>Публикации</span>\n      )}\n    </>\n  );\n};\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.write}>\n      <Field\n        validate={[required, maxLength300]}\n        component={Textarea}\n        name=\"WritePost\"\n        required\n        placeholder=\"Расскажите, что нового :)\"\n        className={classes.area}\n      />\n      <button className={`${classes.btn} ${\"button\"}`}>Отправить</button>\n    </form>\n  );\n};\n\nconst AddPostFormRedux = reduxForm({ form: \"WritePost\" })(AddPostForm);\n\nexport default WritePost;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { addPost } from \"../../../../redux/profileReducer\";\nimport WritePost from \"./WritePost\";\nimport { reset } from \"redux-form\";\n\nlet mapStateToProps = (state) => {\n  return { newPostText: state.profilePage.newPostText };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    addPost,\n    reset,\n  })\n)(WritePost);\n","import React from \"react\";\nimport classes from \"./Posts.module.css\";\nimport WritePostContainer from \"./WritePost/WritePostContainer\";\n\nconst Posts = (props) => {\n  return (\n    <div className={classes.posts}>\n      <WritePostContainer isOwner={props.isOwner} />\n      <div className={classes.postsItems}>{props.postsElements}</div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Post from \"./Post/Post\";\nimport Posts from \"./Posts\";\nimport avatar from \"../../../assets/img/user.png\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  let postsElements = state.profilePage.posts.map((post) => {\n    return (\n      <Post\n        key={post.id}\n        name={state.profilePage.profile.fullName}\n        avatar={\n          state.profilePage.profile.photos.small\n            ? state.profilePage.profile.photos.small\n            : avatar\n        }\n        message={post.message}\n        likes={post.likes}\n      />\n    );\n  });\n  return { postsElements: postsElements };\n};\n\nexport default compose(connect(mapStateToProps, {}))(Posts);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__g-Lde\",\"main_img\":\"Profile_main_img__3UTF+\"};","// extracted by mini-css-extract-plugin\nexport default {\"main_img\":\"Wallpaper_main_img__NFfs7\"};","import React from \"react\";\nimport classes from \"./Wallpaper.module.css\";\n\nconst Wallpaper = (props) => {\n  return (\n    <img className={classes.main_img} src={props.wallpaper} alt=\"mainImg\" />\n  );\n};\n\nexport default Wallpaper;\n","import React from \"react\";\nimport BioContainer from \"./Bio/Bio\";\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport classes from \"./Profile.module.css\";\nimport Wallpaper from \"./Wallpaper/Wallpaper\";\n\nconst Profile = (props) => {\n  return (\n    <div className={classes.content}>\n      {!props.profile ? null : ( // <Preloader />\n        <>\n          <Wallpaper wallpaper={props.wallpaper} />\n          <BioContainer\n            followed={props.router.location.state || true}\n            user={props.user}\n            error={props.error}\n            isOwner={props.isOwner}\n            bio={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}\n            savePhoto={props.savePhoto}\n          />\n          <PostsContainer isOwner={props.isOwner} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","export const getWallpaper = (state) => {\n  return state.profilePage.bio.wallpaper;\n};\n\nexport const getProfile = (state) => {\n  return state.profilePage.profile;\n};\n\nexport const getStatus = (state) => {\n  return state.profilePage.status;\n};\n\nexport const getAuthorizedUserId = (state) => {\n  return state.auth.userId;\n};\n\nexport const getIsAuth = (state) => {\n  return state.auth.isAuth;\n};\n","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getUserStatus,\n  updateStatus,\n  savePhoto,\n} from \"../../redux/profileReducer\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { withRouter } from \"../Hoc/withRouter\";\nimport { compose } from \"redux\";\nimport {\n  getAuthorizedUserId,\n  getIsAuth,\n  getProfile,\n  getStatus,\n  getWallpaper,\n} from \"../../redux/profileSelectors\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.router.params;\n    if (!userId[\"*\"]) {\n      userId[\"*\"] = this.props.authorizedUserId;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile();\n  }\n  componentDidUpdate(prevProps) {\n    let userId = this.props.router.params;\n    let prevUserId = prevProps.router.params;\n    if (userId[\"*\"] !== prevUserId[\"*\"]) {\n      this.refreshProfile();\n    }\n  }\n  getIsOwner() {\n    let userId = this.props.authorizedUserId;\n    return (\n      this.props.router.location.pathname === \"/profile/\" ||\n      this.props.router.location.pathname === `/profile/${userId}`\n    );\n  }\n  render() {\n    return <Profile {...this.props} isOwner={this.getIsOwner()} />;\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  wallpaper: getWallpaper(state),\n  profile: getProfile(state),\n  preloader: { Preloader },\n  status: getStatus(state),\n  authorizedUserId: getAuthorizedUserId(state),\n  isAuth: getIsAuth(state),\n  error: state.profilePage.error,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getUserStatus,\n    updateStatus,\n    savePhoto,\n  }),\n  withRouter\n)(ProfileContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"User_item__GYsDJ\",\"avatar\":\"User_avatar__jy6eF\",\"name\":\"User_name__1Crl-\",\"city\":\"User_city__9WEZw\",\"unfollow\":\"User_unfollow__zwyPM\"};","import React from \"react\";\nimport classes from \"./User.module.css\";\n\nconst Subscribe = (props) => {\n  const isClicked = () => {\n    debugger;\n    if (props.followed) {\n      props.followed = false;\n      debugger;\n    }\n  };\n  if (!props.isOwner) {\n    if (props.followed) {\n      return (\n        <button\n          onClick={() => {\n            props.followTC(props.id);\n            isClicked();\n          }}\n          className={`${classes.unfollow} button`}\n        >\n          Вы подписаны\n        </button>\n      );\n    } else {\n      return (\n        <button\n          onClick={() => {\n            props.unfollowTC(props.id);\n          }}\n          className={`button`}\n        >\n          Подписаться\n        </button>\n      );\n    }\n  }\n};\n\nexport default Subscribe;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport classes from \"./FormsControls.module.css\";\n\nconst FormControls = ({ meta, element }) => {\n  const hasError = meta.error && meta.touched;\n  return (\n    <div\n      className={classes.formControls + \" \" + (hasError ? classes.error : \"\")}\n    >\n      {element}\n    </div>\n  );\n};\n\nexport const Textarea = ({ input, meta, ...props }) => {\n  return (\n    <FormControls\n      {...props}\n      meta={meta}\n      input={input}\n      element={<textarea {...props} {...input} />}\n    />\n  );\n};\n\nexport const Input = ({ input, meta, ...props }) => {\n  return (\n    <FormControls\n      {...props}\n      meta={meta}\n      input={input}\n      element={<input {...props} {...input} />}\n    />\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  validators,\n  component,\n  props = {}\n) => (\n  <Field\n    placeholder={placeholder}\n    name={name}\n    validate={validators}\n    component={component}\n    {...props}\n  ></Field>\n);\n","export const required = (value) => {\n  if (value) return undefined;\n  return \"Это поле обязательно для заполнения\";\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Превышен лимит символов: ${maxLength}`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formControls\":\"FormsControls_formControls__npsiU\",\"error\":\"FormsControls_error__wukgD\",\"formSummaryError\":\"FormsControls_formSummaryError__Rdvzq\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onChange","e","currentTarget","value","type","autoFocus","onClick","updateStatus","isOwner","Bio","src","bio","photos","large","avatar","alt","target","files","length","savePhoto","error","fullName","birthday","city","Subscribe","id","userId","followed","followTC","unfollowTC","BioContainer","this","React","compose","connect","message","to","name","likes","maxLength300","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","values","addPost","WritePost","reset","state","newPostText","profilePage","WritePostContainer","postsElements","posts","map","post","profile","small","Posts","wallpaper","router","location","user","PostsContainer","getWallpaper","getProfile","getStatus","getAuthorizedUserId","auth","getIsAuth","isAuth","ProfileContainer","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","prevUserId","pathname","getIsOwner","preloader","Preloader","withRouter","FormControls","meta","element","hasError","touched","input","Input","createField","validators","maxLength"],"sourceRoot":""}